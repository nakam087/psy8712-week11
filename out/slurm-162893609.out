── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.5.0     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.1
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
Loading required package: lattice

Attaching package: ‘caret’

The following object is masked from ‘package:purrr’:

    lift

Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
+ Fold01: intercept=TRUE 
- Fold01: intercept=TRUE 
+ Fold02: intercept=TRUE 
- Fold02: intercept=TRUE 
+ Fold03: intercept=TRUE 
- Fold03: intercept=TRUE 
+ Fold04: intercept=TRUE 
- Fold04: intercept=TRUE 
+ Fold05: intercept=TRUE 
- Fold05: intercept=TRUE 
+ Fold06: intercept=TRUE 
- Fold06: intercept=TRUE 
+ Fold07: intercept=TRUE 
- Fold07: intercept=TRUE 
+ Fold08: intercept=TRUE 
- Fold08: intercept=TRUE 
+ Fold09: intercept=TRUE 
- Fold09: intercept=TRUE 
+ Fold10: intercept=TRUE 
- Fold10: intercept=TRUE 
Aggregating results
Fitting final model on full training set
Warning messages:
1: In predict.lm(modelFit, newdata) :
  prediction from rank-deficient fit; attr(*, "non-estim") has doubtful cases
2: In predict.lm(modelFit, newdata) :
  prediction from rank-deficient fit; attr(*, "non-estim") has doubtful cases
3: In predict.lm(modelFit, newdata) :
  prediction from rank-deficient fit; attr(*, "non-estim") has doubtful cases
4: In predict.lm(modelFit, newdata) :
  prediction from rank-deficient fit; attr(*, "non-estim") has doubtful cases
5: In predict.lm(modelFit, newdata) :
  prediction from rank-deficient fit; attr(*, "non-estim") has doubtful cases
6: In predict.lm(modelFit, newdata) :
  prediction from rank-deficient fit; attr(*, "non-estim") has doubtful cases
7: In predict.lm(modelFit, newdata) :
  prediction from rank-deficient fit; attr(*, "non-estim") has doubtful cases
8: In predict.lm(modelFit, newdata) :
  prediction from rank-deficient fit; attr(*, "non-estim") has doubtful cases
9: In predict.lm(modelFit, newdata) :
  prediction from rank-deficient fit; attr(*, "non-estim") has doubtful cases
5.457 sec elapsed
Linear Regression 

426 samples
534 predictors

Pre-processing: centered (502), scaled (502), median imputation (502),
 remove (32) 
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 384, 383, 384, 383, 384, 383, ... 
Resampling results:

  RMSE      Rsquared   MAE     
  169.8019  0.1760773  39.84984

Tuning parameter 'intercept' was held constant at a value of TRUE
Warning message:
In predict.lm(modelFit, newdata) :
  prediction from rank-deficient fit; attr(*, "non-estim") has doubtful cases
+ Fold01: alpha=0.10, lambda=5.281 
- Fold01: alpha=0.10, lambda=5.281 
+ Fold01: alpha=0.55, lambda=5.281 
- Fold01: alpha=0.55, lambda=5.281 
+ Fold01: alpha=1.00, lambda=5.281 
- Fold01: alpha=1.00, lambda=5.281 
+ Fold02: alpha=0.10, lambda=5.281 
- Fold02: alpha=0.10, lambda=5.281 
+ Fold02: alpha=0.55, lambda=5.281 
- Fold02: alpha=0.55, lambda=5.281 
+ Fold02: alpha=1.00, lambda=5.281 
- Fold02: alpha=1.00, lambda=5.281 
+ Fold03: alpha=0.10, lambda=5.281 
- Fold03: alpha=0.10, lambda=5.281 
+ Fold03: alpha=0.55, lambda=5.281 
- Fold03: alpha=0.55, lambda=5.281 
+ Fold03: alpha=1.00, lambda=5.281 
- Fold03: alpha=1.00, lambda=5.281 
+ Fold04: alpha=0.10, lambda=5.281 
- Fold04: alpha=0.10, lambda=5.281 
+ Fold04: alpha=0.55, lambda=5.281 
- Fold04: alpha=0.55, lambda=5.281 
+ Fold04: alpha=1.00, lambda=5.281 
- Fold04: alpha=1.00, lambda=5.281 
+ Fold05: alpha=0.10, lambda=5.281 
- Fold05: alpha=0.10, lambda=5.281 
+ Fold05: alpha=0.55, lambda=5.281 
- Fold05: alpha=0.55, lambda=5.281 
+ Fold05: alpha=1.00, lambda=5.281 
- Fold05: alpha=1.00, lambda=5.281 
+ Fold06: alpha=0.10, lambda=5.281 
- Fold06: alpha=0.10, lambda=5.281 
+ Fold06: alpha=0.55, lambda=5.281 
- Fold06: alpha=0.55, lambda=5.281 
+ Fold06: alpha=1.00, lambda=5.281 
- Fold06: alpha=1.00, lambda=5.281 
+ Fold07: alpha=0.10, lambda=5.281 
- Fold07: alpha=0.10, lambda=5.281 
+ Fold07: alpha=0.55, lambda=5.281 
- Fold07: alpha=0.55, lambda=5.281 
+ Fold07: alpha=1.00, lambda=5.281 
- Fold07: alpha=1.00, lambda=5.281 
+ Fold08: alpha=0.10, lambda=5.281 
- Fold08: alpha=0.10, lambda=5.281 
+ Fold08: alpha=0.55, lambda=5.281 
- Fold08: alpha=0.55, lambda=5.281 
+ Fold08: alpha=1.00, lambda=5.281 
- Fold08: alpha=1.00, lambda=5.281 
+ Fold09: alpha=0.10, lambda=5.281 
- Fold09: alpha=0.10, lambda=5.281 
+ Fold09: alpha=0.55, lambda=5.281 
- Fold09: alpha=0.55, lambda=5.281 
+ Fold09: alpha=1.00, lambda=5.281 
- Fold09: alpha=1.00, lambda=5.281 
+ Fold10: alpha=0.10, lambda=5.281 
- Fold10: alpha=0.10, lambda=5.281 
+ Fold10: alpha=0.55, lambda=5.281 
- Fold10: alpha=0.55, lambda=5.281 
+ Fold10: alpha=1.00, lambda=5.281 
- Fold10: alpha=1.00, lambda=5.281 
Aggregating results
Selecting tuning parameters
Fitting alpha = 0.1, lambda = 0.528 on full training set
11.305 sec elapsed
glmnet 

426 samples
534 predictors

Pre-processing: centered (502), scaled (502), median imputation (502),
 remove (32) 
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 383, 384, 383, 384, 384, 384, ... 
Resampling results across tuning parameters:

  alpha  lambda     RMSE       Rsquared   MAE      
  0.10   0.5280879   6.623875  0.8434862   4.608449
  0.10   1.6699607   7.576820  0.8043546   5.625848
  0.10   5.2808793  10.367579  0.6644352   7.709151
  0.55   0.5280879   8.242503  0.7693150   6.212179
  0.55   1.6699607  11.357879  0.5815987   8.385037
  0.55   5.2808793  14.108246  0.4207842  10.711837
  1.00   0.5280879   9.801017  0.6807343   7.363165
  1.00   1.6699607  12.599717  0.4991595   9.446576
  1.00   5.2808793  15.791160  0.2612402  12.001971

RMSE was used to select the optimal model using the smallest value.
The final values used for the model were alpha = 0.1 and lambda = 0.5280879.
+ Fold01: mtry=  2, min.node.size=5, splitrule=variance 
- Fold01: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold01: mtry= 31, min.node.size=5, splitrule=variance 
- Fold01: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold01: mtry=502, min.node.size=5, splitrule=variance 
- Fold01: mtry=502, min.node.size=5, splitrule=variance 
+ Fold01: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold01: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold01: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold01: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold01: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold01: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold02: mtry=  2, min.node.size=5, splitrule=variance 
- Fold02: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold02: mtry= 31, min.node.size=5, splitrule=variance 
- Fold02: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold02: mtry=502, min.node.size=5, splitrule=variance 
- Fold02: mtry=502, min.node.size=5, splitrule=variance 
+ Fold02: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold02: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold02: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold02: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold02: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold02: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold03: mtry=  2, min.node.size=5, splitrule=variance 
- Fold03: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold03: mtry= 31, min.node.size=5, splitrule=variance 
- Fold03: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold03: mtry=502, min.node.size=5, splitrule=variance 
- Fold03: mtry=502, min.node.size=5, splitrule=variance 
+ Fold03: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold03: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold03: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold03: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold03: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold03: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold04: mtry=  2, min.node.size=5, splitrule=variance 
- Fold04: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold04: mtry= 31, min.node.size=5, splitrule=variance 
- Fold04: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold04: mtry=502, min.node.size=5, splitrule=variance 
Error: mtry can not be larger than number of variables in data. Ranger will EXIT now.
model fit failed for Fold04: mtry=502, min.node.size=5, splitrule=variance Error in ranger::ranger(dependent.variable.name = ".outcome", data = x,  : 
  User interrupt or internal error.
 
- Fold04: mtry=502, min.node.size=5, splitrule=variance 
+ Fold04: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold04: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold04: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold04: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold04: mtry=502, min.node.size=5, splitrule=extratrees 
Error: mtry can not be larger than number of variables in data. Ranger will EXIT now.
model fit failed for Fold04: mtry=502, min.node.size=5, splitrule=extratrees Error in ranger::ranger(dependent.variable.name = ".outcome", data = x,  : 
  User interrupt or internal error.
 
- Fold04: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold05: mtry=  2, min.node.size=5, splitrule=variance 
- Fold05: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold05: mtry= 31, min.node.size=5, splitrule=variance 
- Fold05: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold05: mtry=502, min.node.size=5, splitrule=variance 
- Fold05: mtry=502, min.node.size=5, splitrule=variance 
+ Fold05: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold05: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold05: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold05: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold05: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold05: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold06: mtry=  2, min.node.size=5, splitrule=variance 
- Fold06: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold06: mtry= 31, min.node.size=5, splitrule=variance 
- Fold06: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold06: mtry=502, min.node.size=5, splitrule=variance 
- Fold06: mtry=502, min.node.size=5, splitrule=variance 
+ Fold06: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold06: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold06: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold06: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold06: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold06: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold07: mtry=  2, min.node.size=5, splitrule=variance 
- Fold07: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold07: mtry= 31, min.node.size=5, splitrule=variance 
- Fold07: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold07: mtry=502, min.node.size=5, splitrule=variance 
- Fold07: mtry=502, min.node.size=5, splitrule=variance 
+ Fold07: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold07: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold07: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold07: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold07: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold07: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold08: mtry=  2, min.node.size=5, splitrule=variance 
- Fold08: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold08: mtry= 31, min.node.size=5, splitrule=variance 
- Fold08: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold08: mtry=502, min.node.size=5, splitrule=variance 
- Fold08: mtry=502, min.node.size=5, splitrule=variance 
+ Fold08: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold08: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold08: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold08: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold08: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold08: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold09: mtry=  2, min.node.size=5, splitrule=variance 
- Fold09: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold09: mtry= 31, min.node.size=5, splitrule=variance 
- Fold09: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold09: mtry=502, min.node.size=5, splitrule=variance 
- Fold09: mtry=502, min.node.size=5, splitrule=variance 
+ Fold09: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold09: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold09: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold09: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold09: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold09: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold10: mtry=  2, min.node.size=5, splitrule=variance 
- Fold10: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold10: mtry= 31, min.node.size=5, splitrule=variance 
- Fold10: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold10: mtry=502, min.node.size=5, splitrule=variance 
- Fold10: mtry=502, min.node.size=5, splitrule=variance 
+ Fold10: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold10: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold10: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold10: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold10: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold10: mtry=502, min.node.size=5, splitrule=extratrees 
Aggregating results
Selecting tuning parameters
Fitting mtry = 502, splitrule = variance, min.node.size = 5 on full training set
Warning messages:
1: model fit failed for Fold04: mtry=502, min.node.size=5, splitrule=variance Error in ranger::ranger(dependent.variable.name = ".outcome", data = x,  : 
  User interrupt or internal error.
 
2: model fit failed for Fold04: mtry=502, min.node.size=5, splitrule=extratrees Error in ranger::ranger(dependent.variable.name = ".outcome", data = x,  : 
  User interrupt or internal error.
 
3: In nominalTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo,  :
  There were missing values in resampled performance measures.
58.825 sec elapsed
Random Forest 

426 samples
534 predictors

Pre-processing: centered (502), scaled (502), median imputation (502),
 remove (32) 
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 384, 381, 384, 384, 384, 385, ... 
Resampling results across tuning parameters:

  mtry  splitrule   RMSE       Rsquared   MAE     
    2   variance     9.766846  0.8781190  6.990298
    2   extratrees  10.844972  0.8728048  7.894897
   31   variance     7.309476  0.8852628  4.969857
   31   extratrees   7.804365  0.8786427  5.275452
  502   variance     6.850565  0.8587814  4.568451
  502   extratrees   7.042430  0.8597746  4.652259

Tuning parameter 'min.node.size' was held constant at a value of 5
RMSE was used to select the optimal model using the smallest value.
The final values used for the model were mtry = 502, splitrule = variance
 and min.node.size = 5.
+ Fold01: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold01: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold01: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold01: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold01: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold01: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold01: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold01: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold01: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold01: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold02: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold02: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold02: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold02: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold02: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold02: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold02: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold02: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold02: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold02: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold03: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold03: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold03: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold03: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold03: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold03: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold03: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold03: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold03: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold03: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold04: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold04: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold04: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold04: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold04: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold04: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold04: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold04: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold04: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold04: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold05: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold05: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold05: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold05: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold05: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold05: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold05: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold05: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold05: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold05: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold06: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold06: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold06: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold06: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold06: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold06: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold06: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold06: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold06: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold06: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold07: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold07: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold07: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold07: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold07: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold07: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold07: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold07: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold07: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold07: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold08: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold08: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold08: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold08: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold08: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold08: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold08: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold08: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold08: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold08: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold09: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold09: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold09: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold09: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold09: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold09: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold09: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold09: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold09: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold09: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold10: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold10: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold10: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold10: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold10: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold10: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold10: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold10: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold10: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold10: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
Aggregating results
Selecting tuning parameters
Fitting nrounds = 100, lambda = 1e-04, alpha = 0, eta = 0.3 on full training set
245.95 sec elapsed
eXtreme Gradient Boosting 

426 samples
534 predictors

Pre-processing: centered (502), scaled (502), median imputation (502),
 remove (32) 
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 383, 383, 383, 384, 382, 384, ... 
Resampling results across tuning parameters:

  lambda  alpha  nrounds  RMSE      Rsquared   MAE     
  0e+00   0e+00   50      3.648561  0.9424156  1.046585
  0e+00   0e+00  100      3.647080  0.9424907  1.019490
  0e+00   0e+00  150      3.647086  0.9424907  1.019420
  0e+00   1e-04   50      3.705404  0.9416171  1.056051
  0e+00   1e-04  100      3.704552  0.9416964  1.028117
  0e+00   1e-04  150      3.704552  0.9416964  1.028117
  0e+00   1e-01   50      3.775525  0.9400358  1.051636
  0e+00   1e-01  100      3.775168  0.9400539  1.039220
  0e+00   1e-01  150      3.775168  0.9400539  1.039220
  1e-04   0e+00   50      3.641082  0.9436924  1.032504
  1e-04   0e+00  100      3.640579  0.9437346  1.007095
  1e-04   0e+00  150      3.640583  0.9437345  1.007084
  1e-04   1e-04   50      3.648050  0.9436155  1.036469
  1e-04   1e-04  100      3.647413  0.9436474  1.010785
  1e-04   1e-04  150      3.647413  0.9436474  1.010770
  1e-04   1e-01   50      3.760208  0.9407078  1.052730
  1e-04   1e-01  100      3.759542  0.9407303  1.042116
  1e-04   1e-01  150      3.759542  0.9407303  1.042116
  1e-01   0e+00   50      3.706098  0.9457044  1.030424
  1e-01   0e+00  100      3.705518  0.9457310  1.006142
  1e-01   0e+00  150      3.705520  0.9457311  1.006121
  1e-01   1e-04   50      3.711442  0.9455836  1.029370
  1e-01   1e-04  100      3.710358  0.9456232  1.006355
  1e-01   1e-04  150      3.710367  0.9456230  1.006313
  1e-01   1e-01   50      3.723957  0.9471647  1.024646
  1e-01   1e-01  100      3.724176  0.9471584  1.011984
  1e-01   1e-01  150      3.724176  0.9471584  1.011984

Tuning parameter 'eta' was held constant at a value of 0.3
RMSE was used to select the optimal model using the smallest value.
The final values used for the model were nrounds = 100, lambda = 1e-04, alpha
 = 0 and eta = 0.3.

Call:
summary.resamples(object = resamples(list(ols_reg, elastic_net,
 random_forest, eXtreme)), metric = "Rsquared")

Models: Model1, Model2, Model3, Model4 
Number of resamples: 10 

Rsquared 
               Min.     1st Qu.     Median      Mean    3rd Qu.      Max. NA's
Model1 6.173743e-05 0.006049025 0.01115885 0.1760773 0.08885536 1.0000000    0
Model2 6.786494e-01 0.806557205 0.84801396 0.8434862 0.90917707 0.9336357    0
Model3 6.591743e-01 0.803996460 0.90188468 0.8587814 0.92673946 0.9623823    1
Model4 8.358301e-01 0.934298532 0.94153058 0.9437346 0.98218771 0.9997343    0

Aggregating results
Fitting final model on full training set
4.933 sec elapsed
Aggregating results
Selecting tuning parameters
Fitting alpha = 0.1, lambda = 0.528 on full training set
2.9 sec elapsed
Aggregating results
Selecting tuning parameters
Fitting mtry = 502, splitrule = variance, min.node.size = 5 on full training set
Warning message:
In nominalTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo,  :
  There were missing values in resampled performance measures.
16.924 sec elapsed
Aggregating results
Selecting tuning parameters
Fitting nrounds = 100, lambda = 0, alpha = 0, eta = 0.3 on full training set
23.255 sec elapsed
